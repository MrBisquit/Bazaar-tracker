<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bazaar tracker</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            background-color: #171717;
            color: white;
        }
        .item_container {
            width: 20rem;
            height: 20rem;
            background-color: #101010;
            border-radius: 2.5rem;
            padding: 2rem;
            display: inline-block;
        }
        .item_list_container {
            padding: 2rem;
            row-gap: 2rem;
            column-gap: 2rem;
            gap: 2rem;
        }
        input {
            padding: 2rem;
            border-radius: 2.5rem;
            border: 0;
            width: 25rem;
        }
        button {
            padding: 2rem;
            border-radius: 2.5rem;
            border: 0;
            width: 25rem;
        }
    </style>
    <script>
        setTimeout(() => {
            location.reload();
        }, 15000);
    </script>
    <script>
    // create and show the notification
    const showNotification = (title, body, icon) => {
        // create a new notification
        const notification = new Notification(title, {
            body: body,
            icon: icon
        });

        // close the notification after 10 seconds
        setTimeout(() => {
            notification.close();
        }, 10 * 1000);

        // navigate to a URL when clicked
        notification.addEventListener('click', () => {

            window.open('https://www.javascripttutorial.net/web-apis/javascript-notification/', '_blank');
        });
    }

    // show an error message
    const showError = () => {
        const error = document.querySelector('.error');
        error.style.display = 'block';
        error.textContent = 'You blocked the notifications';
    }

    const GetNPerms = async () =>{
// check notification permission
let granted = false;

        if (Notification.permission === 'granted') {
            granted = true;
        } else if (Notification.permission !== 'denied') {
            let permission = await Notification.requestPermission();
            granted = permission === 'granted' ? true : false;
        }

        // show notification or error
        granted ? showNotification() : showError();
    }
    </script>
</head>
<body>
    <%- body %>
</body>
</html>